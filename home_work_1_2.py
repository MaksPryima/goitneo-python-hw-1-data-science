def parse_input(user_input):
    """
    üî∑ –ü–ê–†–°–Ü–ù–ì INPUT. –†–æ–∑–±–∏—Ä–∞—î –≤–≤–µ–¥–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–∞ –∫–æ–º–∞–Ω–¥—É —Ç–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∏.
    """
    if not user_input.strip():  # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ä—è–¥–æ–∫ –Ω–µ —î –ø—É—Å—Ç–∏–º –∞–±–æ –Ω–µ –º—ñ—Å—Ç–∏—Ç—å –ª–∏—à–µ –ø—Ä–æ–±—ñ–ª–∏
        return None
    cmd, *args = user_input.split()
    cmd = cmd.strip().lower()
    return cmd, *args

def add_contact(args, contacts):
    """
    üî∑ –î–û–î–ê–í–ê–ù–ù–Ø –ö–û–ù–¢–ê–ö–¢–£  
    """
    try:
        name, phone = args
        if name in contacts:
            return "This name already exist. If you want update contact, use command 'change' {Name} {New Phone}"
        else:
            contacts[name] = phone 
            return "Contact added."
    except:
        return "Enter correct data: add {Name} {New Phone}"

def change_contact(args, contacts):
    """
    üî∑ –ó–ú–Ü–ù–ê –î–ê–ù–ù–ò–• –ö–û–ù–¢–ê–ö–¢–£
    """
    try:
        name, phone = args
        if name in contacts:
            contacts[name] = phone
            return "Contact updated." #                  
        else:
            return "This name wasn't found. If you want add new contact ,use command 'add' {Name} {New Phone}"
    except:
        return "Enter correct data: change {Name} {New Phone}"

def show_phone(args, contacts):
    """
    üî∑ –ü–û–ö–ê–ó–ê–¢–ò –¢–ï–õ–ï–§–û–ù
    """
    name = args[0]
    try:
        if name in contacts:
            return contacts[name]
        else:
            return "This name wasn't found."
    except:
        return "Enter correct data: phone {Name}"

def show_all(contacts):
    """
    üî∑ –ü–û–ö–ê–ó–ê–¢–ò –í–°–Ü –î–û–î–ê–ù–Ü –ö–û–ù–¢–ê–ö–¢–ò
    """
    if contacts:
        all_contacts = ""
        for key, value in contacts.items():
            all_contacts += f"{key}: {value}\n"
        return all_contacts.rstrip("\n")
    else:
        return "You don't have any contact yet"

def main():
    contacts = {}
    print("Welcome to the assistant bot!")
    try:
        while True:
            user_input = input("Enter a command: ")
            command, *args = parse_input(user_input)
            if command in ["close", "exit"]:
                # üî∑ –í–ò–•–Ü–î. –ö–æ–º–∞–Ω–¥–∞ "close" –∞–±–æ "exit". –í–∏–≤—ñ–¥: "Good bye!" —Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ä–æ–±–æ—Ç–∏ –±–æ—Ç–∞
                print("Good bye!")
                break
            elif command == "hello":
                # üî∑ –ü–†–ò–í–Ü–¢–ê–ù–ù–Ø                   
                print("How can I help you?")
            elif command == "add":
                print(add_contact(args, contacts))
            elif command == "change":
                print(change_contact(args, contacts))
            elif command == "phone":
                print(show_phone(args, contacts))
            elif command == "all":
                print(show_all(contacts))
            else:
                # üî∑ –ö–û–ú–ê–ù–î–ò –©–û –ù–ï –í–Ü–î–ü–û–í–Ü–î–ê–Æ–¢–¨ –§–û–†–ú–ê–¢–ê–ú. –í–∏–≤—ñ–¥: "Invalid command."
                print("Invalid command.")
    except Exception as e: 
        print(f"An error occurred: {e}. Please try again.")

if __name__ == "__main__":
    main()